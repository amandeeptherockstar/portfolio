{
  "title": "The Dark Side of React Custom Hooks: Unnecessary Re-Renders",
  "description": "Custom Hooks are powerful, but misusing them can silently wreck your app's performance. In this post, we explore the hidden pitfalls of React custom hooks—particularly how they can lead to unnecessary re-renders. Learn how to identify these issues, structure your hooks smartly, and build flexible, composable components without sacrificing performance.",
  "publishDate": "2025-04-01T00:00:00.000Z",
  "tags": [
    "React",
    "Hooks",
    "Design Patterns",
    "Advanced React Hooks"
  ],
  "draft": false,
  "body": {
    "raw": "\nReact custom hooks are a fantastic way to reuse logic across your components. They’re clean, modular, and make your code feel more organized. But there’s a sneaky downside:\n\n**State updates in custom hooks can trigger re-renders in your components — even if you’re not using the values they return.**\n\nLet’s break this down with a simple example, explore why it’s a problem, and learn how to fix it in an easy, practical way.\n\n### The Problem: A Custom Hook That Bites Back\n\nImagine you’re building a React app and you want to track the window’s width. You decide to create a custom hook called `useWindowSize` to handle this. Here’s what it might look like:\n\n```javascript\nconst useWindowSize = () => {  \n  const [width, setWidth] = useState(window.innerWidth);  \n  \n  useEffect(() => {  \n    const handleResize = () => setWidth(window.innerWidth);  \n    window.addEventListener(\"resize\", handleResize);  \n    return () => window.removeEventListener(\"resize\", handleResize);  \n  }, []);  \n  \n  return null; // We’re not even returning the width!  \n};  \n  \nconst App = () => {  \n  useWindowSize(); // Just calling the hook  \n  return <p>App Component</p>;  \n};\n```\n\nAt first glance, this looks fine. The hook listens for window resize events, updates the width state, and… that’s it. The App component calls `useWindowSize()` but doesn’t use its return value (which is `null` anyway). So, no harm done, right?\n\nWrong. Here’s the catch: every time you resize the window, the setWidth call updates the state inside useWindowSize. Since App component used the hook, React considers the App dependent on it. **The entire App component re-renders on every resize**, even though it doesn’t care about the width value. That’s a performance hit you didn’t sign up for!\n\n#### Why Does This Happen?\n\nIn React, when a hook updates its internal state (like calling `setWidth`), it tells any component using that hook: “Hey, something changed — time to re-render!” This happens regardless of whether the component actually uses the hook’s returned value. It’s just how React’s dependency tracking works. In our example, `App` component re-renders unnecessarily because it’s “tied” to `useWindowSize`, even though it doesn’t need the `width`.\n\nThis might not seem like a big deal in a small app, but imagine App is a complex component with lots of child elements. All that re-rendering could slow things down, making your app feel sluggish.\n\n### Issues\n\n-   **Resizing the window triggers a state update** inside `useWindowSize`.\n-   Since `App` **uses** `useWindowSize`It **re-renders every time the window resizes**, even though it **doesn't use the width**.\n\n### The Fix: Swap the Hook for a Component\n\nSo, how do we stop this madness? **The simplest solution is to ditch the custom hook and move the logic into a dedicated component instead.** Here’s how:\n\n```javascript\n\nconst WindowSizeComponent = () => {  \n  const [width, setWidth] = useState(window.innerWidth);  \n  \n  useEffect(() => {  \n    const handleResize = () => setWidth(window.innerWidth);  \n    window.addEventListener(\"resize\", handleResize);  \n    return () => window.removeEventListener(\"resize\", handleResize);  \n  }, []);  \n  \n  return <p>Window width: {width}</p>;  \n};  \n  \nconst App = () => {  \n  return (  \n    <div>  \n      <WindowSizeComponent />  \n    </div>  \n  );  \n};\n```\nNow, the `width` state and the resize logic live inside `WindowSizeComponent`. When the window resizes, only `WindowSizeComponent` re-renders — `App` component stays untouched. This keeps your app performant because React only updates the part of the UI that actually needs to change.\n\n### When to Use Hooks vs. Components\n\nCustom hooks are awesome when you need reusable logic that components _actually use_ — like fetching data or managing form state. But **if the logic involves state updates that don’t need to be shared or consumed elsewhere (like our window resize example), a component might be the better choice.** It’s all about keeping re-renders under control.\n\n### Takeaway\n\nReact custom hooks are powerful, but they come with a dark side:\n\n**State updates can trigger re-renders in unexpected places. If your hook’s return value isn’t being used, those updates might still haunt your app’s performance.** Next time you’re tempted to throw state into a custom hook “just because,” pause and ask: _Would a component work better here?_ Your app — and your users — will thank you for it.\n\nWant to support me? Consider buy me coffee ☕💙  \n👉 [buymeacoffee.com/amandeepkochhar](https://buymeacoffee.com/amandeepkochhar)",
    "code": "var Component=(()=>{var p=Object.create;var s=Object.defineProperty;var E=Object.getOwnPropertyDescriptor;var y=Object.getOwnPropertyNames;var u=Object.getPrototypeOf,m=Object.prototype.hasOwnProperty;var w=(l,e)=>()=>(e||l((e={exports:{}}).exports,e),e.exports),g=(l,e)=>{for(var o in e)s(l,o,{get:e[o],enumerable:!0})},i=(l,e,o,t)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let r of y(e))!m.call(l,r)&&r!==o&&s(l,r,{get:()=>e[r],enumerable:!(t=E(e,r))||t.enumerable});return l};var F=(l,e,o)=>(o=l!=null?p(u(l)):{},i(e||!l||!l.__esModule?s(o,\"default\",{value:l,enumerable:!0}):o,l)),k=l=>i(s({},\"__esModule\",{value:!0}),l);var a=w((z,c)=>{c.exports=_jsx_runtime});var b={};g(b,{default:()=>h,frontmatter:()=>f});var n=F(a()),f={title:\"The Dark Side of React Custom Hooks: Unnecessary Re-Renders\",description:\"Custom Hooks are powerful, but misusing them can silently wreck your app's performance. In this post, we explore the hidden pitfalls of React custom hooks\\u2014particularly how they can lead to unnecessary re-renders. Learn how to identify these issues, structure your hooks smartly, and build flexible, composable components without sacrificing performance.\",publishDate:\"2025-04-01\",tags:[\"React\",\"Hooks\",\"Design Patterns\",\"Advanced React Hooks\"]};function d(l){let e={a:\"a\",br:\"br\",code:\"code\",em:\"em\",figure:\"figure\",h3:\"h3\",h4:\"h4\",li:\"li\",p:\"p\",pre:\"pre\",span:\"span\",strong:\"strong\",ul:\"ul\",...l.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.p,{children:\"React custom hooks are a fantastic way to reuse logic across your components. They\\u2019re clean, modular, and make your code feel more organized. But there\\u2019s a sneaky downside:\"}),`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:\"State updates in custom hooks can trigger re-renders in your components\\u200A\\u2014\\u200Aeven if you\\u2019re not using the values they return.\"})}),`\n`,(0,n.jsx)(e.p,{children:\"Let\\u2019s break this down with a simple example, explore why it\\u2019s a problem, and learn how to fix it in an easy, practical way.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"the-problem-a-custom-hook-that-bites-back\",children:\"The Problem: A Custom Hook That Bites Back\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Imagine you\\u2019re building a React app and you want to track the window\\u2019s width. You decide to create a custom hook called \",(0,n.jsx)(e.code,{children:\"useWindowSize\"}),\" to handle this. Here\\u2019s what it might look like:\"]}),`\n`,(0,n.jsx)(e.figure,{\"data-rehype-pretty-code-figure\":\"\",children:(0,n.jsx)(e.pre,{style:{backgroundColor:\"#24292e\",color:\"#e1e4e8\"},tabIndex:\"0\",\"data-language\":\"javascript\",\"data-theme\":\"github-dark\",children:(0,n.jsxs)(e.code,{\"data-language\":\"javascript\",\"data-theme\":\"github-dark\",style:{display:\"grid\"},children:[(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"const\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\" useWindowSize\"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\" =\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" () \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=>\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" {  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"  const\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" [\"}),(0,n.jsx)(e.span,{style:{color:\"#79B8FF\"},children:\"width\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#79B8FF\"},children:\"setWidth\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"] \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\" useState\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(window.innerWidth);  \"})]}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"  \"})}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\"  useEffect\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(() \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=>\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" {  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"    const\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\" handleResize\"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\" =\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" () \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=>\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\" setWidth\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(window.innerWidth);  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"    window.\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\"addEventListener\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#9ECBFF\"},children:'\"resize\"'}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\", handleResize);  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"    return\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" () \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=>\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" window.\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\"removeEventListener\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#9ECBFF\"},children:'\"resize\"'}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\", handleResize);  \"})]}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"  }, []);  \"})}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"  \"})}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"  return\"}),(0,n.jsx)(e.span,{style:{color:\"#79B8FF\"},children:\" null\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"; \"}),(0,n.jsx)(e.span,{style:{color:\"#6A737D\"},children:\"// We\\u2019re not even returning the width!  \"})]}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"};  \"})}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"  \"})}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"const\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\" App\"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\" =\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" () \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=>\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" {  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\"  useWindowSize\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(); \"}),(0,n.jsx)(e.span,{style:{color:\"#6A737D\"},children:\"// Just calling the hook  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"  return\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" <\"}),(0,n.jsx)(e.span,{style:{color:\"#85E89D\"},children:\"p\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\">App Component</\"}),(0,n.jsx)(e.span,{style:{color:\"#85E89D\"},children:\"p\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\">;  \"})]}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"};\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"At first glance, this looks fine. The hook listens for window resize events, updates the width state, and\\u2026 that\\u2019s it. The App component calls \",(0,n.jsx)(e.code,{children:\"useWindowSize()\"}),\" but doesn\\u2019t use its return value (which is \",(0,n.jsx)(e.code,{children:\"null\"}),\" anyway). So, no harm done, right?\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Wrong. Here\\u2019s the catch: every time you resize the window, the setWidth call updates the state inside useWindowSize. Since App component used the hook, React considers the App dependent on it. \",(0,n.jsx)(e.strong,{children:\"The entire App component re-renders on every resize\"}),\", even though it doesn\\u2019t care about the width value. That\\u2019s a performance hit you didn\\u2019t sign up for!\"]}),`\n`,(0,n.jsx)(e.h4,{id:\"why-does-this-happen\",children:\"Why Does This Happen?\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"In React, when a hook updates its internal state (like calling \",(0,n.jsx)(e.code,{children:\"setWidth\"}),\"), it tells any component using that hook: \\u201CHey, something changed\\u200A\\u2014\\u200Atime to re-render!\\u201D This happens regardless of whether the component actually uses the hook\\u2019s returned value. It\\u2019s just how React\\u2019s dependency tracking works. In our example, \",(0,n.jsx)(e.code,{children:\"App\"}),\" component re-renders unnecessarily because it\\u2019s \\u201Ctied\\u201D to \",(0,n.jsx)(e.code,{children:\"useWindowSize\"}),\", even though it doesn\\u2019t need the \",(0,n.jsx)(e.code,{children:\"width\"}),\".\"]}),`\n`,(0,n.jsx)(e.p,{children:\"This might not seem like a big deal in a small app, but imagine App is a complex component with lots of child elements. All that re-rendering could slow things down, making your app feel sluggish.\"}),`\n`,(0,n.jsx)(e.h3,{id:\"issues\",children:\"Issues\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[(0,n.jsx)(e.strong,{children:\"Resizing the window triggers a state update\"}),\" inside \",(0,n.jsx)(e.code,{children:\"useWindowSize\"}),\".\"]}),`\n`,(0,n.jsxs)(e.li,{children:[\"Since \",(0,n.jsx)(e.code,{children:\"App\"}),\" \",(0,n.jsx)(e.strong,{children:\"uses\"}),\" \",(0,n.jsx)(e.code,{children:\"useWindowSize\"}),\"It \",(0,n.jsx)(e.strong,{children:\"re-renders every time the window resizes\"}),\", even though it \",(0,n.jsx)(e.strong,{children:\"doesn't use the width\"}),\".\"]}),`\n`]}),`\n`,(0,n.jsx)(e.h3,{id:\"the-fix-swap-the-hook-for-a-component\",children:\"The Fix: Swap the Hook for a Component\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"So, how do we stop this madness? \",(0,n.jsx)(e.strong,{children:\"The simplest solution is to ditch the custom hook and move the logic into a dedicated component instead.\"}),\" Here\\u2019s how:\"]}),`\n`,(0,n.jsx)(e.figure,{\"data-rehype-pretty-code-figure\":\"\",children:(0,n.jsx)(e.pre,{style:{backgroundColor:\"#24292e\",color:\"#e1e4e8\"},tabIndex:\"0\",\"data-language\":\"javascript\",\"data-theme\":\"github-dark\",children:(0,n.jsxs)(e.code,{\"data-language\":\"javascript\",\"data-theme\":\"github-dark\",style:{display:\"grid\"},children:[(0,n.jsx)(e.span,{\"data-line\":\"\",children:\" \"}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"const\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\" WindowSizeComponent\"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\" =\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" () \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=>\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" {  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"  const\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" [\"}),(0,n.jsx)(e.span,{style:{color:\"#79B8FF\"},children:\"width\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\", \"}),(0,n.jsx)(e.span,{style:{color:\"#79B8FF\"},children:\"setWidth\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"] \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\" useState\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(window.innerWidth);  \"})]}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"  \"})}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\"  useEffect\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(() \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=>\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" {  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"    const\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\" handleResize\"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\" =\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" () \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=>\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\" setWidth\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(window.innerWidth);  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"    window.\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\"addEventListener\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#9ECBFF\"},children:'\"resize\"'}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\", handleResize);  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"    return\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" () \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=>\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" window.\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\"removeEventListener\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"(\"}),(0,n.jsx)(e.span,{style:{color:\"#9ECBFF\"},children:'\"resize\"'}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\", handleResize);  \"})]}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"  }, []);  \"})}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"  \"})}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"  return\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" <\"}),(0,n.jsx)(e.span,{style:{color:\"#85E89D\"},children:\"p\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\">Window width: {width}</\"}),(0,n.jsx)(e.span,{style:{color:\"#85E89D\"},children:\"p\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\">;  \"})]}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"};  \"})}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"  \"})}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"const\"}),(0,n.jsx)(e.span,{style:{color:\"#B392F0\"},children:\" App\"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\" =\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" () \"}),(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"=>\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" {  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#F97583\"},children:\"  return\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" (  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"    <\"}),(0,n.jsx)(e.span,{style:{color:\"#85E89D\"},children:\"div\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\">  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"      <\"}),(0,n.jsx)(e.span,{style:{color:\"#79B8FF\"},children:\"WindowSizeComponent\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\" />  \"})]}),`\n`,(0,n.jsxs)(e.span,{\"data-line\":\"\",children:[(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"    </\"}),(0,n.jsx)(e.span,{style:{color:\"#85E89D\"},children:\"div\"}),(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\">  \"})]}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"  );  \"})}),`\n`,(0,n.jsx)(e.span,{\"data-line\":\"\",children:(0,n.jsx)(e.span,{style:{color:\"#E1E4E8\"},children:\"};\"})})]})})}),`\n`,(0,n.jsxs)(e.p,{children:[\"Now, the \",(0,n.jsx)(e.code,{children:\"width\"}),\" state and the resize logic live inside \",(0,n.jsx)(e.code,{children:\"WindowSizeComponent\"}),\". When the window resizes, only \",(0,n.jsx)(e.code,{children:\"WindowSizeComponent\"}),\" re-renders\\u200A\\u2014\\u200A\",(0,n.jsx)(e.code,{children:\"App\"}),\" component stays untouched. This keeps your app performant because React only updates the part of the UI that actually needs to change.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"when-to-use-hooks-vs-components\",children:\"When to Use Hooks vs. Components\"}),`\n`,(0,n.jsxs)(e.p,{children:[\"Custom hooks are awesome when you need reusable logic that components \",(0,n.jsx)(e.em,{children:\"actually use\"}),\"\\u200A\\u2014\\u200Alike fetching data or managing form state. But \",(0,n.jsx)(e.strong,{children:\"if the logic involves state updates that don\\u2019t need to be shared or consumed elsewhere (like our window resize example), a component might be the better choice.\"}),\" It\\u2019s all about keeping re-renders under control.\"]}),`\n`,(0,n.jsx)(e.h3,{id:\"takeaway\",children:\"Takeaway\"}),`\n`,(0,n.jsx)(e.p,{children:\"React custom hooks are powerful, but they come with a dark side:\"}),`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"State updates can trigger re-renders in unexpected places. If your hook\\u2019s return value isn\\u2019t being used, those updates might still haunt your app\\u2019s performance.\"}),\" Next time you\\u2019re tempted to throw state into a custom hook \\u201Cjust because,\\u201D pause and ask: \",(0,n.jsx)(e.em,{children:\"Would a component work better here?\"}),\" Your app\\u200A\\u2014\\u200Aand your users\\u200A\\u2014\\u200Awill thank you for it.\"]}),`\n`,(0,n.jsxs)(e.p,{children:[\"Want to support me? Consider buy me coffee \\u2615\\u{1F499}\",(0,n.jsx)(e.br,{}),`\n`,\"\\u{1F449} \",(0,n.jsx)(e.a,{href:\"https://buymeacoffee.com/amandeepkochhar\",children:\"buymeacoffee.com/amandeepkochhar\"})]})]})}function h(l={}){let{wrapper:e}=l.components||{};return e?(0,n.jsx)(e,{...l,children:(0,n.jsx)(d,{...l})}):d(l)}return k(b);})();\n;return Component;"
  },
  "_id": "blog/dark-side-of-react-hooks.mdx",
  "_raw": {
    "sourceFilePath": "blog/dark-side-of-react-hooks.mdx",
    "sourceFileName": "dark-side-of-react-hooks.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/dark-side-of-react-hooks"
  },
  "type": "Blog",
  "slug": "dark-side-of-react-hooks"
}